name: Release CI
on:
  push:
    tags:
      - 'v*'
env:
  CI: true
  GITHUB_BRANCH: ${{ github.ref }}
  GITHUB_HEAD_REF: ${{ github.head_ref }}
  GITHUB_BASE_REF: ${{ github.base_ref }}
  GITHUB_COMMIT: ${{ github.sha }}
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        java: [ '17' ]
      fail-fast: false
    name: ${{ matrix.os }} JDK ${{ matrix.java }}
    steps:
      - name: Git checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up JDK
        uses: actions/setup-java@v3.6.0
        with:
          distribution: 'temurin'
          cache: 'gradle'
          java-version: ${{ matrix.java }}
      - name: Echo JAVA_HOME
        run: echo $JAVA_HOME
      - name: Echo JAVA version
        run: java --version
      - name: Cache SonarCloud packages
        uses: actions/cache@v3.0.8
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Gradle packages
        uses: actions/cache@v3.0.8
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle') }}
          restore-keys: ${{ runner.os }}-gradle
      - name: Verify Gradle Wrapper
        uses: gradle/wrapper-validation-action@v1
      - name: Echo Gradle version
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --version
      - name: Execute clean
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --info --stacktrace clean
      - name: Execute check
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --info --stacktrace check
      - name: Execute build
        uses: gradle/gradle-build-action@v2
        with:
          arguments: --info --stacktrace build
      - name: Sonarcube analyze
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          arguments: --info --stacktrace sonarqube
      - name: Publish Gradle Plugin
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          arguments: --info --stacktrace publishPluginMavenPublicationToGitHubPackagesRepository
      - name: Publish Gradle Plugin Marker
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_KEY: ${{ secrets.GPG_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        with:
          arguments: --info --stacktrace publishProjectConfigurationPluginPluginMarkerMavenPublicationToGitHubPackagesRepository
      - name: Publish Plugin
        uses: gradle/gradle-build-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          PLUGIN_KEY: ${{ secrets.PLUGIN_KEY }}
          PLUGIN_TOKEN: ${{ secrets.PLUGIN_TOKEN }}
        with:
          arguments: --info --stacktrace publishPlugins -Pgradle.publish.key=${{ secrets.PLUGIN_KEY }} -Pgradle.publish.secret=${{ secrets.PLUGIN_TOKEN }}
